{"version":3,"sources":["platformer/characters/Hero.ts","platformer/characters/Spider.ts","platformer/scenes/playScene.ts","platformer/config.ts","platformer/helpers.ts","platformer/Game.tsx","platformer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Hero","params","scene","x","y","key","frame","sprite","body","currentScene","isFrozen","isAlive","SPEED","JUMP_SPEED","BOUNCE_SPEED","physics","add","existing","world","enable","setCollideWorldBounds","setFlipX","setOrigin","setOffset","events","on","update","anim","this","destroy","createAnims","cursors","left","isDown","moveLeft","right","moveRight","stand","up","jump","velocity","anims","play","setVelocityX","flipX","touching","down","canJump","setVelocityY","sfx","create","frames","generateFrameNumbers","frameRate","repeat","Phaser","GameObjects","Sprite","Spider","blocked","Physics","Arcade","PlayScene","coinPickupCount","hasKey","level","coinFont","keyIcon","hud","platforms","enemyWalls","bgDecorations","door","coins","hero","spiders","data","input","keyboard","createCursorKeys","cameras","main","setRoundPixels","load","image","spritesheet","frameWidth","frameHeight","loadSpritesheets","audio","loadAudio","json","loadLevels","flash","setScale","loadLevel","cache","get","sound","coin","stomp","bgm","setLoop","createHud","handleCollisions","text","setFrame","group","decoration","forEach","deco","platform","spawnPlatform","spawnCoin","spawnDoor","spawnKey","spawnCharacters","platformSprite","allowGravity","immovable","spawnEnemyWall","width","side","wallSprite","setImmovable","setAllowGravity","visible","coinSprite","tweens","targets","ease","duration","yoyo","spider","spiderSprite","retroFontConfig","height","chars","charsPerRow","lineSpacing","bitmapFont","RetroFont","Parse","make","MARGIN","coinIcon","bitmapText","collider","overlap","onHeroVsCoin","onHeroVsEnemy","onHeroVsKey","onHeroVsDoor","_","killAndHide","enemy","bounce","die","restart","freeze","alpha","autoStart","onComplete","fade","stop","Scene","IGame","config","type","AUTO","parent","default","arcade","gravity","debug","Game","id","React","Component","Platformer","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9b181d23.chunk.js","sourcesContent":["import Phaser from \"phaser\";\nimport PlayScene from \"../scenes/playScene\";\n\nclass Hero extends Phaser.GameObjects.Sprite {\n  public sprite: Phaser.Physics.Arcade.Sprite;\n  public body: Phaser.Physics.Arcade.Body;\n  private currentScene: PlayScene;\n  private isFrozen: Boolean = false;\n  private isAlive: Boolean = true;\n\n  SPEED = 200;\n  JUMP_SPEED = 600;\n  BOUNCE_SPEED = 200;\n\n  constructor(params) {\n    super(params.scene, params.x, params.y, params.key, params.frame);\n\n    this.currentScene = params.scene;\n\n    this.currentScene.physics.add.existing(this);\n    this.currentScene.physics.world.enable(this);\n    this.currentScene.add.existing(this);\n    this.body.setCollideWorldBounds(true);\n\n    this.setFlipX(false);\n    this.setOrigin(0, 0.5);\n    this.body.setOffset(3, 10);\n\n    this.currentScene.events.on(\"update\", () => {\n      this.body && this.update();\n    });\n\n    this.on(\n      \"animationcomplete\",\n      function(anim) {\n        if (anim.key === \"die\") {\n          this.destroy();\n        }\n      },\n      this\n    );\n\n    this.createAnims(this.currentScene);\n  }\n\n  update(): void {\n    if (this.currentScene.cursors.left.isDown) {\n      this.moveLeft();\n    } else if (this.currentScene.cursors.right.isDown) {\n      this.moveRight();\n    } else {\n      this.stand();\n    }\n\n    if (this.currentScene.cursors.up.isDown) {\n      this.jump();\n    }\n\n    const falling = this.body.velocity.y > 0;\n    if (falling) {\n      this.anims.play(\"fall\", true);\n    }\n  }\n\n  moveLeft(): void {\n    if (this.isFrozen) return;\n\n    this.body.setVelocityX(-this.SPEED); // move left\n\n    const isRunning = this.body.velocity.x !== 0 && this.body.velocity.y === 0;\n\n    if (isRunning) {\n      this.anims.play(\"run\", true);\n    }\n\n    this.flipX = true; // flip the sprite to the left\n  }\n\n  moveRight(): void {\n    if (this.isFrozen) return;\n\n    this.body.setVelocityX(this.SPEED); // move right\n\n    const isRunning = this.body.velocity.x !== 0 && this.body.velocity.y === 0;\n\n    if (isRunning) {\n      this.anims.play(\"run\", true);\n    }\n\n    this.flipX = false; // use the original sprite looking to the right\n  }\n\n  stand(): void {\n    this.body.setVelocityX(0);\n\n    const isStanding =\n      this.body.velocity.x === 0 &&\n      this.body.velocity.y === 0 &&\n      this.body.touching.down;\n\n    if (isStanding) {\n      this.anims.play(\"stop\", true);\n    }\n  }\n\n  jump() {\n    const canJump = this.body.touching.down && this.isAlive && !this.isFrozen;\n\n    if (canJump) {\n      this.body.setVelocityY(-this.JUMP_SPEED);\n      this.anims.play(\"jump\", true);\n      this.currentScene.sfx.jump.play();\n    }\n\n    return canJump;\n  }\n\n  bounce() {\n    this.body.setVelocityY(-this.BOUNCE_SPEED);\n  }\n\n  freeze() {\n    this.body.enable = false;\n    this.anims.play(\"stop\", true);\n    this.isFrozen = true;\n  }\n\n  die() {\n    this.isAlive = false;\n    this.body.enable = false;\n\n    this.anims.play(\"die\");\n  }\n\n  private createAnims(scene: PlayScene) {\n    scene.anims.create({\n      key: \"stop\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [0]\n      })\n    });\n    scene.anims.create({\n      key: \"run\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [1, 2]\n      }),\n      frameRate: 8,\n      repeat: -1\n    });\n    scene.anims.create({\n      key: \"jump\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [3]\n      })\n    });\n\n    scene.anims.create({\n      key: \"fall\",\n      frames: scene.anims.generateFrameNumbers(\"hero\", {\n        frames: [4]\n      })\n    });\n  }\n}\n\nexport default Hero;\n","import Phaser from \"phaser\";\n\nclass Spider extends Phaser.Physics.Arcade.Sprite {\n  public sprite: Phaser.Physics.Arcade.Sprite;\n  private currentScene: Phaser.Scene;\n\n  SPEED = 100;\n\n  constructor(params) {\n    super(params.scene, params.x, params.y, params.key, params.frame);\n    this.currentScene = params.scene;\n    this.setOrigin(0.5);\n\n    this.scene.add.existing(this);\n    this.scene.physics.add.existing(this);\n    this.scene.physics.world.enable(this);\n    this.setCollideWorldBounds(true);\n    this.setVelocityX(this.SPEED);\n    this.scene.events.on(\"update\", () => {\n      this.body && this.update();\n    });\n    this.on(\n      \"animationcomplete\",\n      function(anim) {\n        if (anim.key === \"die\") {\n          this.destroy();\n        }\n      },\n      this\n    );\n    this.createAnims(this.currentScene);\n    this.anims.play(\"crawl\", true);\n  }\n\n  update() {\n    // check against walls and reverse direction if necessary\n    if (this.body.touching.right || this.body.blocked.right) {\n      this.setVelocityX(-this.SPEED); // turn left\n    } else if (this.body.touching.left || this.body.blocked.left) {\n      this.setVelocityX(this.SPEED); // turn right\n    }\n  }\n\n  die() {\n    this.body.enable = false;\n\n    this.scene.anims.play(\"die\", this);\n  }\n\n  private createAnims(scene) {\n    scene.anims.create({\n      key: \"crawl\",\n      frames: scene.anims.generateFrameNumbers(\"spider\", {\n        frames: [0, 1, 2]\n      }),\n      frameRate: 8,\n      repeat: -1\n    });\n    scene.anims.create({\n      key: \"die\",\n      frames: scene.anims.generateFrameNumbers(\"spider\", {\n        frames: [0, 4, 0, 4, 0, 4, 3, 3, 3, 3, 3, 3]\n      }),\n      frameRate: 12\n    });\n  }\n}\n\nexport default Spider;\n","import { LEVEL_COUNT, NUMBERS_STR, MARGIN } from \"../config\";\nimport { Scene } from \"phaser\";\nimport {\n  loadImages,\n  loadSpritesheets,\n  loadAudio,\n  loadLevels,\n  createSfx\n} from \"../helpers\";\nimport Hero from \"../characters/Hero\";\nimport Spider from \"../characters/Spider\";\n\nclass PlayScene extends Scene {\n  cursors = null;\n  coinPickupCount = null;\n  hasKey = null;\n  level = null;\n  sfx = null;\n  coinFont = null;\n  keyIcon = null;\n  hud = null;\n\n  platforms = null;\n  enemyWalls = null;\n  bgDecorations = null;\n  door = null;\n\n  coins = null;\n  hero: Hero = null;\n  spiders = null;\n  key = null;\n\n  constructor() {\n    super(\"PlayScene\");\n  }\n\n  init(data) {\n    this.cursors = this.input.keyboard.createCursorKeys();\n\n    this.coinPickupCount = 0;\n    this.hasKey = false;\n    this.level = (data.level || 0) % LEVEL_COUNT;\n\n    this.cameras.main.setRoundPixels(true);\n  }\n\n  preload() {\n    loadImages(this);\n    loadSpritesheets(this);\n    loadAudio(this);\n    loadLevels(this);\n  }\n\n  create() {\n    this.cameras.main.flash();\n\n    this.add\n      .image(0, 0, \"background\")\n      .setOrigin(0)\n      .setScale(1.2);\n\n    this.loadLevel(this.cache.json.get(`level:${this.level}`));\n\n    this.sfx = createSfx(this);\n    this.sfx.bgm.setLoop(true);\n    this.sfx.bgm.play();\n\n    this.createHud();\n  }\n\n  update() {\n    this.handleCollisions();\n    this.coinFont.text = `x${this.coinPickupCount}`;\n    this.keyIcon.setFrame(this.hasKey ? 1 : 0);\n  }\n\n  private loadLevel(data) {\n    this.platforms = this.add.group();\n    this.enemyWalls = this.add.group();\n    this.bgDecorations = this.add.group();\n\n    this.coins = this.add.group();\n    this.spiders = this.add.group();\n\n    data.decoration.forEach(deco => {\n      this.bgDecorations.add(\n        this.add.image(deco.x, deco.y, \"decoration\", deco.frame).setOrigin(0, 0)\n      );\n    });\n    data.platforms.forEach(platform => this.spawnPlatform(platform));\n    data.coins.forEach(coin => this.spawnCoin(coin));\n\n    this.spawnDoor(data.door.x, data.door.y);\n    this.spawnKey(data.key.x, data.key.y);\n    this.spawnCharacters({ hero: data.hero, spiders: data.spiders });\n  }\n\n  private spawnPlatform(platform) {\n    const platformSprite = this.platforms\n      .create(platform.x, platform.y, platform.image)\n      .setOrigin(0, 0);\n    this.physics.world.enable(platformSprite);\n    platformSprite.body.allowGravity = false;\n    platformSprite.body.immovable = true;\n\n    this.spawnEnemyWall(platform.x, platform.y, \"left\");\n    this.spawnEnemyWall(platform.x + platformSprite.width, platform.y, \"right\");\n  }\n\n  private spawnEnemyWall(x, y, side) {\n    const wallSprite = this.enemyWalls\n      .create(x, y, \"invisible-wall\")\n      .setOrigin(side === \"left\" ? 1 : 0, 1);\n\n    this.physics.world.enable(wallSprite);\n    wallSprite.body.setImmovable(true);\n    wallSprite.body.setAllowGravity(false);\n    wallSprite.visible = false;\n  }\n\n  private spawnCoin(coin) {\n    let coinSprite = this.coins\n      .create(coin.x, coin.y, \"coin\")\n      .setOrigin(0.5, 0.75);\n\n    this.anims.create({\n      key: \"rotate\",\n      frames: this.anims.generateFrameNumbers(\"coin\", {\n        frames: [0, 1, 2, 1]\n      }),\n      frameRate: 6,\n      repeat: -1\n    });\n\n    this.anims.play(\"rotate\", coinSprite);\n    // disable gravity on coins\n    this.physics.world.enable(coinSprite);\n    coinSprite.body.setAllowGravity(false);\n  }\n\n  private spawnDoor(x, y) {\n    this.door = this.bgDecorations.create(x, y, \"door\").setOrigin(0.5, 1);\n    this.physics.world.enable(this.door);\n    this.door.body.setAllowGravity(false);\n  }\n\n  private spawnKey(x, y) {\n    this.key = this.bgDecorations.create(x, y, \"key\").setOrigin(0.5, 0.5);\n    this.physics.world.enable(this.key);\n    this.key.body.setAllowGravity(false);\n    this.key.y -= 3;\n\n    this.tweens.add({\n      targets: this.key,\n      y: this.key.y + 6,\n      ease: \"Sine.easeInOut\",\n      duration: 800,\n      yoyo: true,\n      repeat: -1\n    });\n  }\n\n  private spawnCharacters(data) {\n    this.hero = new Hero({\n      scene: this,\n      x: data.hero.x,\n      y: data.hero.y\n    });\n\n    data.spiders.forEach(spider => {\n      const spiderSprite = new Spider({\n        scene: this,\n        x: spider.x,\n        y: spider.y\n      });\n      this.spiders.add(spiderSprite);\n    });\n  }\n\n  private createHud() {\n    const retroFontConfig = {\n      image: \"font:numbers\",\n      width: 19,\n      height: 26,\n      chars: NUMBERS_STR,\n      charsPerRow: 10,\n      \"offset.x\": 0,\n      \"offset.y\": 0,\n      \"spacing.x\": 1,\n      \"spacing.y\": 1,\n      lineSpacing: 0\n    };\n\n    this.cache.bitmapFont.add(\n      \"font:numbers\",\n      Phaser.GameObjects.RetroFont.Parse(this, retroFontConfig)\n    );\n\n    this.keyIcon = this.make\n      .image({\n        x: MARGIN,\n        y: MARGIN + 19,\n        key: \"icon:key\"\n      })\n      .setOrigin(0, 0.5);\n\n    let coinIcon = this.make\n      .image({\n        x: MARGIN + this.keyIcon.width + 7,\n        y: MARGIN,\n        key: \"icon:coin\"\n      })\n      .setOrigin(0, 0);\n\n    this.coinFont = this.add\n      .bitmapText(\n        MARGIN + coinIcon.x + coinIcon.width,\n        MARGIN + coinIcon.height / 2,\n        \"font:numbers\"\n      )\n      .setOrigin(0, 0.5);\n  }\n\n  private handleCollisions() {\n    this.physics.add.collider(this.hero, this.platforms);\n    this.physics.add.collider(this.spiders, this.platforms);\n    this.physics.add.collider(this.spiders, this.enemyWalls);\n\n    this.physics.add.overlap(\n      this.hero,\n      this.coins,\n      this.onHeroVsCoin,\n      null,\n      this\n    );\n    this.physics.add.overlap(\n      this.hero,\n      this.spiders,\n      this.onHeroVsEnemy,\n      null,\n      this\n    );\n    this.physics.add.overlap(this.hero, this.key, this.onHeroVsKey, null, this);\n    this.physics.add.overlap(\n      this.hero,\n      this.door,\n      this.onHeroVsDoor,\n      // ignore if there is no key or the player is on air\n      (hero: Hero) => {\n        return this.hasKey && hero.body.touching.down;\n      },\n      this\n    );\n  }\n\n  private onHeroVsCoin(_, coin) {\n    this.sfx.coin.play();\n\n    this.coins.killAndHide(coin);\n    coin.body.enable = false;\n\n    this.coinPickupCount++;\n  }\n\n  private onHeroVsEnemy(hero, enemy) {\n    if (hero.body.velocity.y > 0) {\n      // kill enemies when hero is falling\n      hero.bounce();\n      enemy.die();\n      this.sfx.stomp.play();\n    } else {\n      // game over -> restart the game\n      this.sfx.stomp.play();\n      this.scene.restart();\n    }\n  }\n\n  private onHeroVsKey(_, key) {\n    this.sfx.key.play();\n    this.bgDecorations.killAndHide(key);\n    key.body.enable = false;\n\n    this.hasKey = true;\n  }\n\n  private onHeroVsDoor(hero, door) {\n    door.setFrame(1);\n    this.sfx.door.play();\n    hero.freeze();\n\n    this.tweens.add({\n      targets: hero,\n      x: this.door.x,\n      alpha: 0,\n      duration: 500,\n      ease: null,\n      autoStart: true,\n      onComplete: () => {\n        this.cameras.main.fade(1000, 0, 0, 0, false, () => {\n          this.sfx.bgm.stop();\n          this.scene.restart({ level: this.level + 1 });\n        });\n      }\n    });\n  }\n}\n\nexport default PlayScene;\n","export const GAME_HEIGHT = 630;\nexport const GAME_WIDTH = 960;\nexport const LEVEL_COUNT = 2;\nexport const NUMBERS_STR = \"0123456789X \";\nexport const MARGIN = 10;\nexport const GRAVITY = 1200;\n","export const loadImages = function(scene) {\n  scene.load.image(\"background\", \"./assets/phaser/images/background.png\");\n  scene.load.image(\"ground\", \"./assets/phaser/images/ground.png\");\n  scene.load.image(\"grass:8x1\", \"./assets/phaser/images/grass_8x1.png\");\n  scene.load.image(\"grass:6x1\", \"./assets/phaser/images/grass_6x1.png\");\n  scene.load.image(\"grass:4x1\", \"./assets/phaser/images/grass_4x1.png\");\n  scene.load.image(\"grass:2x1\", \"./assets/phaser/images/grass_2x1.png\");\n  scene.load.image(\"grass:1x1\", \"./assets/phaser/images/grass_1x1.png\");\n  scene.load.image(\n    \"invisible-wall\",\n    \"./assets/phaser/images/invisible_wall.png\"\n  );\n  scene.load.image(\"icon:coin\", \"./assets/phaser/images/coin_icon.png\");\n  scene.load.image(\"font:numbers\", \"./assets/phaser/images/numbers.png\");\n  scene.load.image(\"key\", \"./assets/phaser/images/key.png\");\n};\n\nexport const loadSpritesheets = function(scene) {\n  scene.load.spritesheet(\"coin\", \"./assets/phaser/images/coin_animated.png\", {\n    frameWidth: 22,\n    frameHeight: 22\n  });\n  scene.load.spritesheet(\"spider\", \"./assets/phaser/images/spider.png\", {\n    frameWidth: 42,\n    frameHeight: 32\n  });\n  scene.load.spritesheet(\"hero\", \"./assets/phaser/images/hero.png\", {\n    frameWidth: 36,\n    frameHeight: 42\n  });\n  scene.load.spritesheet(\"door\", \"./assets/phaser/images/door.png\", {\n    frameWidth: 42,\n    frameHeight: 66\n  });\n  scene.load.spritesheet(\"icon:key\", \"./assets/phaser/images/key_icon.png\", {\n    frameWidth: 34,\n    frameHeight: 30\n  });\n  scene.load.spritesheet(\"decoration\", \"./assets/phaser/images/decor.png\", {\n    frameWidth: 42,\n    frameHeight: 42\n  });\n};\n\nexport const loadAudio = function(scene) {\n  scene.load.audio(\"sfx:jump\", \"./assets/phaser/audio/jump.wav\");\n  scene.load.audio(\"sfx:coin\", \"./assets/phaser/audio/coin.wav\");\n  scene.load.audio(\"sfx:stomp\", \"./assets/phaser/audio/stomp.wav\");\n  scene.load.audio(\"sfx:key\", \"./assets/phaser/audio/key.wav\");\n  scene.load.audio(\"sfx:door\", \"./assets/phaser/audio/door.wav\");\n  scene.load.audio(\"bgm\", [\n    \"./assets/phaser/audio/bgm.mp3\",\n    \"./assets/phaser/audio/bgm.ogg\"\n  ]);\n};\n\nexport const loadLevels = function(scene) {\n  scene.load.json(\"level:0\", \"./assets/phaser/data/level00.json\");\n  scene.load.json(\"level:1\", \"./assets/phaser/data/level01.json\");\n};\n\nexport const createSfx = function(scene) {\n  const sfx = {\n    key: scene.sound.add(\"sfx:key\"),\n    door: scene.sound.add(\"sfx:door\"),\n    jump: scene.sound.add(\"sfx:jump\"),\n    coin: scene.sound.add(\"sfx:coin\"),\n    stomp: scene.sound.add(\"sfx:stomp\"),\n    bgm: scene.sound.add(\"bgm\")\n  };\n\n  return sfx;\n};\n","import React from \"react\";\nimport Phaser from \"phaser\";\nimport PlayScene from \"./scenes/playScene\";\n\nimport { GAME_HEIGHT, GAME_WIDTH, GRAVITY } from \"./config\";\n\nexport interface IGameProps {}\n\nexport default class IGame extends React.Component<IGameProps, any> {\n  componentDidMount() {\n    const config: GameConfig = {\n      type: Phaser.AUTO,\n      width: GAME_WIDTH,\n      height: GAME_HEIGHT,\n      parent: \"phaser-game\",\n      scene: [PlayScene],\n      physics: {\n        default: \"arcade\",\n        arcade: {\n          gravity: { y: GRAVITY },\n          debug: false\n        }\n      }\n    };\n\n    new Phaser.Game(config);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  public render() {\n    return <div id=\"phaser-game\" />;\n  }\n}\n","import React from \"react\";\nimport Game from \"./Game\";\n\ninterface PlatformerProps {}\n\nconst Platformer: React.FC<PlatformerProps> = () => {\n  return <Game />;\n};\n\nexport default Platformer;\n","import React from \"react\";\nimport \"./App.css\";\nimport PlatformerGame from \"./platformer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PlatformerGame />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}